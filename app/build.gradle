apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    buildToolsVersion androidBuildToolsVersion
    compileSdkVersion compileAndroidSDkVersion

    defaultConfig {
        applicationId "com.marcio.popularmoviesclean"
        minSdkVersion minimumAndroidSDkVersion
        targetSdkVersion targetAndroidSDkVersion
        versionCode versionCodeApp
        versionName versionNameApp
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        test.java.srcDirs += 'src/fakes/java'
        androidTest.java.srcDirs += 'src/fakes/java'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    testOptions {
        unitTests.includeAndroidResources = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
    implementation "androidx.appcompat:appcompat:${jetpackAppCompatVersion}"
    implementation "androidx.core:core-ktx:${jetpackAppCompatVersion}"
    implementation "com.squareup.okhttp3:okhttp:$okHttpVersion"

    testImplementation "androidx.test:core:${androidTestCoreVersion}"
    testImplementation "androidx.test:runner:${supportTestRunnerVersion}"
    testImplementation "androidx.test.ext:junit:${androidJUnitVersion}"
    testImplementation "androidx.test:rules:${supportTestRulesVersion}"
    testImplementation "androidx.test.espresso:espresso-core:${espressoVersion}"
    testImplementation "androidx.test.espresso:espresso-contrib:${espressoVersion}"
    testImplementation "io.mockk:mockk:${mockkVersion}"
    testImplementation "org.robolectric:robolectric:${robolectricVersion}"
    testImplementation "com.squareup.okhttp3:mockwebserver:$okHttpVersion"

    androidTestImplementation "androidx.test:core:${androidTestCoreVersion}"
    androidTestImplementation "androidx.test:runner:${supportTestRunnerVersion}"
    androidTestImplementation "androidx.test.ext:junit:${androidJUnitVersion}"
    androidTestImplementation "androidx.test:rules:${supportTestRulesVersion}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${espressoVersion}"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:${espressoVersion}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${espressoVersion}"
    androidTestImplementation "androidx.test.espresso:espresso-intents:${espressoVersion}"
    androidTestImplementation "io.mockk:mockk:${mockkVersion}"
    androidTestImplementation "com.squareup.okhttp3:mockwebserver:$okHttpVersion"
}
